/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-bold: 700;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --spacing-container-custom: 1320px;
    --color-bannerBg: #FFF8F3;
    --color-ButtonBg: #FD6E0A;
    --font-openSans: "Open Sans", sans-serif;
    --color-darkOne: #181818;
    --color-darkTwo: #474747;
    --color-darkThree: #757575;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .relative {
    position: relative;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .-m-\[1\] {
    margin: calc(1 * -1);
  }
  .-m-\[100px\] {
    margin: calc(100px * -1);
  }
  .-m-\[150px\] {
    margin: calc(150px * -1);
  }
  .m-auto {
    margin: auto;
  }
  .-mt-\[80px\] {
    margin-top: calc(80px * -1);
  }
  .-mt-\[90px\] {
    margin-top: calc(90px * -1);
  }
  .-mt-\[100px\] {
    margin-top: calc(100px * -1);
  }
  .-mr-\[50px\] {
    margin-right: calc(50px * -1);
  }
  .-mr-\[100px\] {
    margin-right: calc(100px * -1);
  }
  .-mr-\[200px\] {
    margin-right: calc(200px * -1);
  }
  .mr-\[50px\] {
    margin-right: 50px;
  }
  .ml-\[5\] {
    margin-left: 5;
  }
  .ml-\[50px\] {
    margin-left: 50px;
  }
  .flex {
    display: flex;
  }
  .table {
    display: table;
  }
  .h-\[300px\] {
    height: 300px;
  }
  .h-\[650px\] {
    height: 650px;
  }
  .h-\[700px\] {
    height: 700px;
  }
  .h-\[750px\] {
    height: 750px;
  }
  .w-\[585\] {
    width: 585;
  }
  .w-\[585px\] {
    width: 585px;
  }
  .w-container-custom {
    width: var(--spacing-container-custom);
  }
  .flex-grow {
    flex-grow: 1;
  }
  .grow {
    flex-grow: 1;
  }
  .grow-1 {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .resize {
    resize: both;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .space-y-5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-4 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-8 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-\[5\] {
    border-radius: 5;
  }
  .rounded-\[5px\] {
    border-radius: 5px;
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .bg-ButtonBg {
    background-color: var(--color-ButtonBg);
  }
  .bg-\[po\] {
    background-color: po;
  }
  .bg-\[position\] {
    background-color: position;
  }
  .bg-\[ur\] {
    background-color: ur;
  }
  .bg-\[url\(\/images\/developer\.png\)\,9\] {
    background-color: url(/images/developer.png),9;
  }
  .bg-\[url\(\/images\/developer\.png\)\,\] {
    background-color: url(/images/developer.png),;
  }
  .bg-\[url\] {
    background-color: url;
  }
  .bg-amber-100 {
    background-color: var(--color-amber-100);
  }
  .bg-bannerBg {
    background-color: var(--color-bannerBg);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-\[url\(\)\] {
    background-image: url();
  }
  .bg-\[url\(\.\.\/images\/developer\.png\)\] {
    background-image: url(../images/developer.png);
  }
  .bg-\[url\(\.\.images\/developer\.png\)\] {
    background-image: url(..images/developer.png);
  }
  .bg-\[url\(\.\/images\/developer\.png\)\] {
    background-image: url(./images/developer.png);
  }
  .bg-\[url\(\.images\/developer\.png\)\] {
    background-image: url(.images/developer.png);
  }
  .bg-\[url\(\/i\)\] {
    background-image: url(/i);
  }
  .bg-\[url\(\/images\)\] {
    background-image: url(/images);
  }
  .bg-\[url\(\/images\/\(\/images\/hardy\.png\)\)\] {
    background-image: url(/images/(/images/hardy.png));
  }
  .bg-\[url\(\/images\/\)\] {
    background-image: url(/images/);
  }
  .bg-\[url\(\/images\/developer\.png\)\,\(\)\] {
    background-image: url(/images/developer.png),();
  }
  .bg-\[url\(\/images\/developer\.png\)\,\(\/images\/\)\] {
    background-image: url(/images/developer.png),(/images/);
  }
  .bg-\[url\(\/images\/developer\.png\)\,\(\/images\/developer\.png\)\] {
    background-image: url(/images/developer.png),(/images/developer.png);
  }
  .bg-\[url\(\/images\/developer\.png\)\,\(\/images\/har\)\] {
    background-image: url(/images/developer.png),(/images/har);
  }
  .bg-\[url\(\/images\/developer\.png\)\,\(\/images\/hardy\)\] {
    background-image: url(/images/developer.png),(/images/hardy);
  }
  .bg-\[url\(\/images\/developer\.png\)\,\(\/images\/hardy\.png\)\] {
    background-image: url(/images/developer.png),(/images/hardy.png);
  }
  .bg-\[url\(\/images\/developer\.png\)\,\(u\)\] {
    background-image: url(/images/developer.png),(u);
  }
  .bg-\[url\(\/images\/developer\.png\)\,url\(\/images\/developer\.png\)\] {
    background-image: url(/images/developer.png),url(/images/developer.png);
  }
  .bg-\[url\(\/images\/developer\.png\)\,url\(\/images\/hardy\.png\)\] {
    background-image: url(/images/developer.png),url(/images/hardy.png);
  }
  .bg-\[url\(\/images\/developer\.png\)\,url\(\/images\/header\.png\)\] {
    background-image: url(/images/developer.png),url(/images/header.png);
  }
  .bg-\[url\(\/images\/developer\.png\)\,url\(\/images\/header_bg\.png\)\] {
    background-image: url(/images/developer.png),url(/images/header_bg.png);
  }
  .bg-\[url\(\/images\/developer\.png\)\] {
    background-image: url(/images/developer.png);
  }
  .bg-\[url\(\/images\/hardy\)\] {
    background-image: url(/images/hardy);
  }
  .bg-\[url\(\/images\/hardy\.png\)\] {
    background-image: url(/images/hardy.png);
  }
  .bg-\[url\(i\)\] {
    background-image: url(i);
  }
  .bg-\[url\(images\)\] {
    background-image: url(images);
  }
  .bg-\[url\(images\/\)\] {
    background-image: url(images/);
  }
  .bg-\[url\(images\/deve\)\] {
    background-image: url(images/deve);
  }
  .bg-\[url\(images\/developer\)\] {
    background-image: url(images/developer);
  }
  .bg-\[url\(images\/developer\.png\)\] {
    background-image: url(images/developer.png);
  }
  .bg-\[position\:bottom_left\,bottom_right\] {
    background-position: bottom left,bottom right;
  }
  .bg-\[position\:top_left\,bottom_right\] {
    background-position: top left,bottom right;
  }
  .bg-\[position\:top_left\,to\] {
    background-position: top left,to;
  }
  .bg-\[position\:top_left\,top\] {
    background-position: top left,top;
  }
  .bg-\[position\:top_left\,top_right\] {
    background-position: top left,top right;
  }
  .bg-\[position\:top_left\] {
    background-position: top left;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-9 {
    padding-inline: calc(var(--spacing) * 9);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-9 {
    padding-block: calc(var(--spacing) * 9);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-28 {
    padding-top: calc(var(--spacing) * 28);
  }
  .pb-24 {
    padding-bottom: calc(var(--spacing) * 24);
  }
  .pb-28 {
    padding-bottom: calc(var(--spacing) * 28);
  }
  .text-right {
    text-align: right;
  }
  .font-openSans {
    font-family: var(--font-openSans);
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-\[18px\] {
    font-size: 18px;
  }
  .text-\[80px\] {
    font-size: 80px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-ButtonBg {
    color: var(--color-ButtonBg);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-darkOne {
    color: var(--color-darkOne);
  }
  .text-darkThree {
    color: var(--color-darkThree);
  }
  .text-darkTwo {
    color: var(--color-darkTwo);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[1s\] {
    transition-property: 1s;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-75 {
    --tw-duration: 75ms;
    transition-duration: 75ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .duration-5000 {
    --tw-duration: 5000ms;
    transition-duration: 5000ms;
  }
  .hover\:border {
    &:hover {
      @media (hover: hover) {
        border-style: var(--tw-border-style);
        border-width: 1px;
      }
    }
  }
  .hover\:border-0 {
    &:hover {
      @media (hover: hover) {
        border-style: var(--tw-border-style);
        border-width: 0px;
      }
    }
  }
  .hover\:border-none {
    &:hover {
      @media (hover: hover) {
        --tw-border-style: none;
        border-style: none;
      }
    }
  }
  .hover\:border-transparent {
    &:hover {
      @media (hover: hover) {
        border-color: transparent;
      }
    }
  }
  .hover\:bg-ButtonBg {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-ButtonBg);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-duration: initial;
    }
  }
}
